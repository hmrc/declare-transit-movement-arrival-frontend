# microservice specific routes

GET        /                                                 controllers.IndexController.onPageLoad

GET        /assets/*file                                     controllers.Assets.versioned(path="/public", file: Asset)

GET        /language/:lang                                   controllers.LanguageSwitchController.switchToLanguage(lang: String)

GET        /this-service-has-been-reset                      controllers.SessionExpiredController.onPageLoad

GET        /:mrn/checkYourAnswers                            controllers.CheckYourAnswersController.onPageLoad(mrn: MovementReferenceNumber)
POST       /:mrn/checkYourAnswers                            controllers.CheckYourAnswersController.onPost(mrn: MovementReferenceNumber)

GET        /unauthorised                                     controllers.UnauthorisedController.onPageLoad

GET        /accessibility-statement                          controllers.AccessibilityController.onPageLoad

GET        /movementReferenceNumber                          controllers.MovementReferenceNumberController.onPageLoad
POST       /movementReferenceNumber                          controllers.MovementReferenceNumberController.onSubmit
GET        /changeMovementReferenceNumber                    controllers.MovementReferenceNumberController.onPageLoad
POST       /changeMovementReferenceNumber                    controllers.MovementReferenceNumberController.onSubmit

GET        /:mrn/goodsLocation                               controllers.GoodsLocationController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/goodsLocation                               controllers.GoodsLocationController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeGoodsLocation                         controllers.GoodsLocationController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeGoodsLocation                         controllers.GoodsLocationController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/presentationOffice                          controllers.PresentationOfficeController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/presentationOffice                          controllers.PresentationOfficeController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changePresentationOffice                    controllers.PresentationOfficeController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changePresentationOffice                    controllers.PresentationOfficeController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/customsSubPlace                             controllers.CustomsSubPlaceController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/customsSubPlace                             controllers.CustomsSubPlaceController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeCustomsSubPlace                       controllers.CustomsSubPlaceController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeCustomsSubPlace                       controllers.CustomsSubPlaceController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/authorisedLocation                          controllers.AuthorisedLocationController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/authorisedLocation                          controllers.AuthorisedLocationController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeAuthorisedLocation                    controllers.AuthorisedLocationController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeAuthorisedLocation                    controllers.AuthorisedLocationController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/traderAddress                               controllers.TraderAddressController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/traderAddress                               controllers.TraderAddressController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeTraderAddress                         controllers.TraderAddressController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeTraderAddress                         controllers.TraderAddressController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/traderEori                                  controllers.TraderEoriController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/traderEori                                  controllers.TraderEoriController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeTraderEori                            controllers.TraderEoriController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeTraderEori                            controllers.TraderEoriController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/traderName                                  controllers.TraderNameController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/traderName                                  controllers.TraderNameController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeTraderName                            controllers.TraderNameController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeTraderName                            controllers.TraderNameController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/useDifferentService                         controllers.UseDifferentServiceController.onPageLoad(mrn: MovementReferenceNumber)

GET        /:mrn/confirmation                                controllers.ConfirmationController.onPageLoad(mrn: MovementReferenceNumber)

GET        /:mrn/incidentOnRoute                             controllers.IncidentOnRouteController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/incidentOnRoute                             controllers.IncidentOnRouteController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeIncidentOnRoute                       controllers.IncidentOnRouteController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeIncidentOnRoute                       controllers.IncidentOnRouteController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/event/:index/eventCountry                   controllers.events.EventCountryController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
POST       /:mrn/event/:index/eventCountry                        controllers.events.EventCountryController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
GET        /:mrn/event/:index/changeEventCountry                  controllers.events.EventCountryController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)
POST       /:mrn/event/:index/changeEventCountry                  controllers.events.EventCountryController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)

GET        /:mrn/event/:index/eventPlace                          controllers.events.EventPlaceController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
POST       /:mrn/event/:index/eventPlace                          controllers.events.EventPlaceController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
GET        /:mrn/event/:index/changeEventPlace                    controllers.events.EventPlaceController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)
POST       /:mrn/event/:index/changeEventPlace                    controllers.events.EventPlaceController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)

GET        /:mrn/event/:index/eventReported                       controllers.events.EventReportedController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
POST       /:mrn/event/:index/eventReported                       controllers.events.EventReportedController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
GET        /:mrn/event/:index/changeEventReported                 controllers.events.EventReportedController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)
POST       /:mrn/event/:index/changeEventReported                 controllers.events.EventReportedController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)

GET        /:mrn/event/:index/incidentInformation                 controllers.events.IncidentInformationController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
POST       /:mrn/event/:index/incidentInformation                 controllers.events.IncidentInformationController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
GET        /:mrn/event/:index/changeIncidentInformation           controllers.events.IncidentInformationController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)
POST       /:mrn/event/:index/changeIncidentInformation           controllers.events.IncidentInformationController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)

GET        /:mrn/event/:index/isTranshipment                      controllers.events.IsTranshipmentController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
POST       /:mrn/event/:index/isTranshipment                      controllers.events.IsTranshipmentController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = NormalMode)
GET        /:mrn/event/:index/changeIsTranshipment                controllers.events.IsTranshipmentController.onPageLoad(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)
POST       /:mrn/event/:index/changeIsTranshipment                controllers.events.IsTranshipmentController.onSubmit(mrn: MovementReferenceNumber, index: Int, mode: Mode = CheckMode)

GET        /:mrn/event/:index/checkEventAnswers                   controllers.events.CheckEventAnswersController.onPageLoad(mrn: MovementReferenceNumber, index: Int)
POST       /:mrn/event/:index/checkEventAnswers                   controllers.events.CheckEventAnswersController.onSubmit(mrn: MovementReferenceNumber, index: Int)

GET        /:mrn/isTraderAddressPlaceOfNotification               controllers.IsTraderAddressPlaceOfNotificationController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/isTraderAddressPlaceOfNotification               controllers.IsTraderAddressPlaceOfNotificationController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeIsTraderAddressPlaceOfNotification         controllers.IsTraderAddressPlaceOfNotificationController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeIsTraderAddressPlaceOfNotification         controllers.IsTraderAddressPlaceOfNotificationController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/placeOfNotification                              controllers.PlaceOfNotificationController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/placeOfNotification                              controllers.PlaceOfNotificationController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changePlaceOfNotification                        controllers.PlaceOfNotificationController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changePlaceOfNotification                        controllers.PlaceOfNotificationController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/event/addEvent                                   controllers.events.AddEventController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/event/addEvent                                   controllers.events.AddEventController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/event/changeAddEvent                             controllers.events.AddEventController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/event/changeAddEvent                             controllers.events.AddEventController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/transhipmentType                        controllers.events.transhipments.TranshipmentTypeController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/transhipmentType                        controllers.events.transhipments.TranshipmentTypeController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeTranshipmentType                  controllers.events.transhipments.TranshipmentTypeController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeTranshipmentType                  controllers.events.transhipments.TranshipmentTypeController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/transportIdentity                        controllers.events.transhipments.TransportIdentityController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/transportIdentity                        controllers.events.transhipments.TransportIdentityController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeTransportIdentity                  controllers.events.transhipments.TransportIdentityController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeTransportIdentity                  controllers.events.transhipments.TransportIdentityController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/transportNationality                        controllers.TransportNationalityController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/transportNationality                        controllers.TransportNationalityController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeTransportNationality                  controllers.TransportNationalityController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeTransportNationality                  controllers.TransportNationalityController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/containerNumber                        controllers.ContainerNumberController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/containerNumber                        controllers.ContainerNumberController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeContainerNumber                  controllers.ContainerNumberController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeContainerNumber                  controllers.ContainerNumberController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)

GET        /:mrn/addContainer                        controllers.AddContainerController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
POST       /:mrn/addContainer                        controllers.AddContainerController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = NormalMode)
GET        /:mrn/changeAddContainer                  controllers.AddContainerController.onPageLoad(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
POST       /:mrn/changeAddContainer                  controllers.AddContainerController.onSubmit(mrn: MovementReferenceNumber, mode: Mode = CheckMode)
